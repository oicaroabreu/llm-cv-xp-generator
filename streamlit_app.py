import os
import streamlit as st
import litellm
import time
from streamlit_tags import st_tags

litellm.set_verbose = True

st.set_page_config(page_title="ü§ñ llm-cv-xp-generator üìÉ")

with st.sidebar:
    st.title("ü§ñ llm-cv-xp-generator üìÉ")
    st.subheader("Crie seu curr√≠culo de desenvolvedor com facilidade!")
    st.write(
        "Desenvolva seu curr√≠culo com poderosos modelos de linguagem. Destaque suas habilidades e experi√™ncias de forma √∫nica e conquiste os recrutadores."
    )

    if "GEMINI_API_KEY" in st.secrets:
        st.success("Token da API Gemini j√° fornecida!", icon="‚úÖ")
        gemini_key = st.secrets["GEMINI_API_KEY"]
    else:
        gemini_key = st.text_input("Inserir Gemini API token:", type="password")

        if not (gemini_key and len(gemini_key) > 0):
            st.warning("Por favor, insira suas credenciais!", icon="‚ö†Ô∏è")
            with st.container(border=True):
                st.write(
                    "Voc√™ ainda n√£o possui um token de API Gemini? Clique no bot√£o abaixo para obter um!"
                )
                col1, col2 = st.columns(2, gap="small")
                col2.link_button("Obter token", "https://ai.google.dev/")
        else:
            st.empty()
            st.success("Agora desfrute!!", icon="üëâ")
            if "messages" in st.session_state:
                del st.session_state["messages"]

    os.environ["GEMINI_API_KEY"] = gemini_key

    st.markdown(
        "üìñ Acesse nosso [Github](https://github.com/oicaroabreu/llm-cv-xp-generator/)"
    )


def get_assistant_response():
    response = litellm.completion(
        model="gemini/gemini-pro",
        messages=st.session_state.messages,
        api_base="http://localhost:11434",
        max_tokens=200,
    )
    print(response)
    return response.choices[0].message.content


st.markdown("# Gerador de Experi√™ncia")
with st.container(border=True):
    col1, col2 = st.columns(2)
    context_input = col1.text_input(
        "Contexto",
        placeholder="Desenvolvimento de ...",
    )

    position_input = col2.text_input(
        "Cargo",
        placeholder="Qual a cargo ocupado?",
    )

    st.markdown("## Stack de Technologias")
    tech_stack_keywords = st_tags(
        label="Palavra chaves:",
        text="Pressione enter para adicionar mais",
        value=["Python", "Streamlit", "Git"],
        suggestions=[
            "React",
            "Node.js",
            "Angular",
            "Vue.js",
            "JavaScript",
            "TypeScript",
            "Python",
            "Java",
            "C#",
            "Ruby",
            "PHP",
            "HTML5",
            "CSS3",
            "SASS/LESS",
            "Bootstrap",
            "Tailwind CSS",
            "SQL",
            "MongoDB",
            "PostgreSQL",
            "GraphQL",
            "Express.js",
            "Django",
            "Flask",
            "Spring Boot",
            "Ruby on Rails",
            "Laravel",
            "ASP.NET",
            "RESTful Web Services",
            "GraphQL APIs",
            "Microservices Architecture",
            "Docker",
            "Kubernetes",
            "Jenkins",
            "Travis CI",
            "Git",
            "GitHub",
            "GitLab",
            "Bitbucket",
            "Jira",
            "Confluence",
            "Agile Methodologies",
            "Scrum",
            "Kanban",
            "Pair Programming",
            "Test-Driven Development (TDD)",
            "Behavior-Driven Development (BDD)",
            "AWS (Amazon Web Services)",
            "Azure",
            "Google Cloud Platform (GCP)",
            "Serverless Architecture",
            "CI/CD Pipelines",
            "GitHub Actions",
            "GitLab CI/CD",
            "Heroku",
            "Netlify",
            "Firebase",
            "JAMstack",
            "Webpack",
            "Babel",
            "Nginx",
            "Apache",
            "Jest",
            "Mocha",
            "Selenium",
            "Cypress",
            "Agile",
            "DevOps",
            "Container Orchestration",
            "Infrastructure as Code (IaC)",
            "Domain-Driven Design (DDD)",
            "Progressive Web Apps (PWA)",
            "Responsive Web Design",
            "Web Accessibility (a11y)",
            "Cross-Browser Compatibility",
            "Elasticsearch",
            "Log Management",
            "Monitoring Tools",
            "Machine Learning",
            "Data Science",
            "Blockchain",
            "Internet of Things (IoT)",
            "Cybersecurity",
            "Websockets",
            "WebAssembly",
            "AR/VR Development",
            "Rust",
            "Go (Golang)",
            "Swift",
            "Kotlin",
            "Unity",
            "Flutter",
            "TensorFlow",
            "PyTorch",
            "Natural Language Processing (NLP)",
            "Computer Vision",
            "Quantum Computing",
        ],
        key="1",
    )

    st.markdown("## Habilidades Interpessoais")
    soft_skills_keywords = st_tags(
        label="Palavra chaves:",
        text="Pressione enter para adicionar mais",
        value=["Trabalho em Equipe", "Comunica√ß√£o Efetiva", "Flexibilidade"],
        suggestions=[
            "Comunica√ß√£o Efetiva",
            "Colabora√ß√£o",
            "Trabalho em Equipe",
            "Resolu√ß√£o de Problemas",
            "Adaptabilidade",
            "Flexibilidade",
            "Pensamento Cr√≠tico",
            "Criatividade",
            "Inova√ß√£o",
            "Empatia",
            "Gest√£o de Tempo",
            "Resili√™ncia",
            "Lideran√ßa",
            "Tomada de Decis√£o",
            "Auto-Motiva√ß√£o",
            "Aprendizado Cont√≠nuo",
            "Negocia√ß√£o",
            "Gerenciamento de Conflitos",
            "Intelig√™ncia Emocional",
            "Orienta√ß√£o para Resultados",
            "Proatividade",
            "Habilidades Interpessoais",
            "Respeito √† Diversidade",
            "Assertividade",
            "Autoconhecimento",
            "Gest√£o de Relacionamentos",
            "Compreens√£o Intercultural",
            "Habilidade de Delegar",
            "Toler√¢ncia ao Estresse",
            "Pensamento Anal√≠tico",
            "Planejamento Estrat√©gico",
            "Orienta√ß√£o para o Cliente",
            "Habilidade de Influenciar",
            "Compartilhamento de Conhecimento",
            "Feedback Construtivo",
            "Habilidade de Motivar",
            "√âtica Profissional",
            "Responsabilidade",
            "Adapta√ß√£o √† Mudan√ßa",
            "Auto-Organiza√ß√£o",
            "Foco no Cliente",
            "Habilidade de Lidar com a Press√£o",
            "Facilidade de Aprendizado",
            "√âtica de Trabalho",
            "Confiabilidade",
            "Autenticidade",
        ],
        key="2",
    )

if "messages" not in st.session_state:
    st.session_state.messages = [
        {
            "role": "system",
            "content": """
                Objetivo: gerar descri√ß√£o de uma √∫nica experi√™ncia para colocar na se√ß√£o de experi√™ncia profissional do curr√≠culo

                - Haja como um assistente de curr√≠culo.
                - Elabore as op√ß√µes e gere uma descri√ß√£o de experi√™ncia profissional curta e objetiva
                - Efetiva para chamar aten√ß√£o de recrutadores
                - Um par√°grafo, usar palavras chaves dentro deste √∫nico par√°grafo dando contexto.
                - Descreva, em formato de lista, as realiza√ß√µes e habilidades desenvolvidas.
                - Destaque cada ponto como um t√≥pico, evidenciando conquistas espec√≠ficas e habilidades adquiridas. 
                - Certifique-se de que cada ponto inicie com um verbo no passado, indicando a√ß√£o conclu√≠da ou habilidade adquirida. 
                - Estruture o texto para enfatizar as realiza√ß√µes e aquisi√ß√µes de habilidades.
                - Forne√ßa detalhes espec√≠ficos sobre as √°reas de conhecimento adquiridas, destacando habilidades t√©cnicas e interpessoais. 
                - Mantenha a clareza e coes√£o na estrutura do texto, destacando habilidades t√©cnicas, interpessoais e profissionais. Utilize uma enumera√ß√£o espec√≠fica para listar as habilidades t√©cnicas e outra para as habilidades interpessoais.

                Template:
                Concluiu o [contexto], onde [breve descri√ß√£o do contexto].

                Desenvolveu habilidades fundamentais de [lista de tech skills relevantes], incluindo [exemplos espec√≠ficos de realiza√ß√µes].

                Demonstrou fortes habilidades de [lista de soft skills relevantes], evidenciando [exemplos espec√≠ficos de demonstra√ß√£o dessas habilidades].

                Como resultado dessas experi√™ncias, obteve benef√≠cios significativos, tais como [enumerar benef√≠cios espec√≠ficos ou aprendizados], contribuindo para [impacto positivo no contexto].

                [Adicione qualquer informa√ß√£o adicional ou detalhes espec√≠ficos conforme necess√°rio].
                """,
        },
        {
            "role": "assistant",
            "content": f"""
                Contexto: {context_input}
                Cargo Ocupado: {position_input}

                Tech Skills trabalhadas: {tech_stack_keywords}
                Soft Skills trabalhadas: {soft_skills_keywords}
                """,
        },
    ]


generate_command = st.button(
    "Gerar", disabled=False if os.environ["GEMINI_API_KEY"] else True
)

with st.container(border=True):
    placeholder = st.empty()
    placeholder.markdown("<div style='height: 50px;'></div>", unsafe_allow_html=True)
    if generate_command:
        with st.spinner("Pensando..."):
            time.sleep(0.5)
            placeholder.markdown(
                "<div style='height: 0px;'></div>", unsafe_allow_html=True
            )
            assistant_response = get_assistant_response()
            placeholder.write(assistant_response)
